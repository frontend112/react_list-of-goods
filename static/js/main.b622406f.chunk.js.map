{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","handleReverse","handleReset","sortedGoods","goods","visibleGoods","sort","good1","good2","length","localeCompare","reverse","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MACjB,CAAEC,YAAaD,EAAMC,gBAhB3B,EAoBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,IAAMQ,EA7DH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAEzB,OAAQV,GACN,KAAKL,EAASW,OACZK,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAME,OAASD,EAAMC,UAEvB,MACF,KAAKpB,EAASS,SACZO,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMG,cAAcF,MAO1B,OAAOf,EACHY,EAAaM,UACbN,EAqCkBO,CAAkBtB,EAAiBuB,KAAKrB,OAE5D,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAELpB,IAAaL,EAASS,UAAY,YAGtCkB,QAASH,KAAKjB,mBAPhB,iCAYA,wBACEmB,KAAK,SACLD,UAAS,4BACPpB,IAAaL,EAASW,QAAU,YAElCgB,QAASH,KAAKd,aALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAS,6BACNrB,GAAc,YAEjBuB,QAASH,KAAKZ,cALhB,sBAWGR,GAAcC,IAAaL,EAASM,OAEjC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKX,YAHhB,sBAWR,6BAEIC,EAAYc,KAAI,SAAAC,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eApFtC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b622406f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (\n        good1.length - good2.length\n      ));\n      break;\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)\n      ));\n      break;\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              `button is-info ${\n                sortType !== SortType.ALPHABET && 'is-light'\n              }`\n            }\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${\n              sortType !== SortType.LENGTH && 'is-light'\n            }`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${\n              !isReversed && 'is-light'\n            }`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (isReversed || sortType !== SortType.NONE)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {\n            sortedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}